/////////////
// PLUGINS //
/////////////

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.60"
    id "com.jfrog.bintray" version "1.8.4"
    id "java-library"
    id "maven-publish"
    id "jacoco"
    id "org.jlleitschuh.gradle.ktlint" version "9.1.1"
    id "io.gitlab.arturbosch.detekt" version "1.2.0"
}

//////////////////
// DEPENDENCIES //
//////////////////

repositories {
    jcenter()
}

ext {
    ktorVersion = "1.2.6"
}

dependencies {
    // KOTLIN
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // KTOR
    implementation "io.ktor:ktor-server-core:$ktorVersion"

    // LOGGING
    implementation "koriit.kotlin:slf4j-utils:0.4.2"

    // TESTING
    testImplementation "org.junit.jupiter:junit-jupiter:5.5.0"
}

/////////////
// COMPILE //
/////////////

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileKotlin {
    dependsOn ktlintFormat
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

//////////
// TEST //
//////////

ktlint {
    verbose = true
}

detekt {
    config = files("detekt.yml")
    buildUponDefaultConfig = true
}

test {
    useJUnitPlatform {
        excludeTags project.hasProperty("fast") ? "Slow" : "None"
    }
}

jacoco {
    toolVersion = "0.8.4"
}

test.finalizedBy(jacocoTestReport)

/////////////
// PUBLISH //
/////////////

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = "sources"
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = "javadoc"
}

publishing {
    publications {
        bintrayMaven(MavenPublication) {
            groupId = project.group
            artifactId = projectName
            version = project.version
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = "Ktor Logging"
                description = "Ktor Logging feature for APIs"
                url = "https://github.com/Koriit/ktor-logging"
                licenses {
                    license {
                        name = "The MIT License"
                        url = "https://github.com/Koriit/ktor-logging/blob/master/LICENSE"
                    }
                }
            }
        }
    }
}

bintray {
    user = System.getProperty("bintray.user")
    key = System.getProperty("bintray.key")
    publications = ["bintrayMaven"]

    pkg {
        repo = "kotlin"
        name = "ktor-logging"
        version {
            name = project.version
            released  = new Date()
        }
    }
}

///////////
// OTHER //
///////////

task getVersion {
    doLast {
        print project.version
    }
}

task fmt {
    dependsOn ktlintFormat
}
